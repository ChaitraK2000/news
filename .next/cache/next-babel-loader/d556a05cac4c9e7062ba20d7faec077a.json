{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\news\\\\pages\\\\components\\\\NewsCards\\\\NewsCards.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Grid, Grow, Typography } from '@material-ui/core';\nimport useStyles from './styles.js';\nimport NewsCard from '../NewsCard/NewsCard';\nvar infoCards = [{\n  color: '#00838f',\n  title: 'Latest News',\n  text: 'Give me the latest news'\n}, {\n  color: '#1565c0',\n  title: 'News by Categories',\n  info: 'Business, Entertainment, General, Health, Science, Sports, Technology',\n  text: 'Give me the latest Technology news'\n}, {\n  color: '#4527a0',\n  title: 'News by Terms',\n  info: 'Bitcoin, PlayStation 5, Smartphones, Donald Trump...',\n  text: 'What\\'s up with PlayStation 5'\n}, {\n  color: '#283593',\n  title: 'News by Sources',\n  info: 'CNN, Wired, BBC News, Time, IGN, Buzzfeed, ABC News...',\n  text: 'Give me the news from CNN'\n}];\n\nvar NewsCards = function NewsCards(_ref) {\n  _s();\n\n  var articles = _ref.articles;\n  var classes = useStyles();\n\n  if (!articles.length) {\n    return __jsx(Grow, {\n      \"in\": true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }, __jsx(Grid, {\n      className: classes.container,\n      container: true,\n      alignItems: \"stretch\",\n      spacing: 3,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }\n    }, infoCards.map(function (infoCard) {\n      return __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 3,\n        className: classes.infoCard,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 24\n        }\n      }, __jsx(\"div\", {\n        className: classes.card,\n        style: {\n          backgroundColor: infoCard.color\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 28\n        }\n      }, __jsx(Typography, {\n        variant: \"h5\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 33\n        }\n      }, infoCard.title), infoCard.info ? __jsx(Typography, {\n        variant: \"h6\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 34\n        }\n      }, __jsx(\"strong\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 37\n        }\n      }, infoCard.title.split(' ')[2], \":\"), __jsx(\"br\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 41\n        }\n      }), infoCard.info) : null, __jsx(Typography, {\n        variant: \"h6\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 33\n        }\n      }, \"Try saying: \", __jsx(\"br\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 70\n        }\n      }), __jsx(\"i\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 75\n        }\n      }, infoCard.text))));\n    })));\n  }\n\n  return __jsx(Grow, {\n    \"in\": true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    className: classes.container,\n    container: true,\n    alignItems: \"stretch\",\n    spacing: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, articles.map(function (article, i) {\n    return __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 4,\n      lg: 3,\n      style: {\n        display: 'flex'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, __jsx(NewsCard, {\n      article: article,\n      i: i,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }));\n  })));\n};\n\n_s(NewsCards, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = NewsCards;\nexport default NewsCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewsCards\");","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/news/pages/components/NewsCards/NewsCards.js"],"names":["React","Grid","Grow","Typography","useStyles","NewsCard","infoCards","color","title","text","info","NewsCards","articles","classes","length","container","map","infoCard","card","backgroundColor","split","article","i","display"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Grid, Grow, Typography } from '@material-ui/core';\r\nimport useStyles  from './styles.js';\r\nimport NewsCard from '../NewsCard/NewsCard';\r\n\r\nconst infoCards = [\r\n    { color: '#00838f', title: 'Latest News', text: 'Give me the latest news' },\r\n    { color: '#1565c0', title: 'News by Categories', info: 'Business, Entertainment, General, Health, Science, Sports, Technology', text: 'Give me the latest Technology news' },\r\n    { color: '#4527a0', title: 'News by Terms', info: 'Bitcoin, PlayStation 5, Smartphones, Donald Trump...', text: 'What\\'s up with PlayStation 5' },\r\n    { color: '#283593', title: 'News by Sources', info: 'CNN, Wired, BBC News, Time, IGN, Buzzfeed, ABC News...', text: 'Give me the news from CNN' },\r\n  ];\r\n\r\nconst NewsCards = ({ articles }) =>{\r\n    const classes = useStyles();\r\n    if(!articles.length){\r\n        return(\r\n            <Grow in>\r\n                <Grid className={classes.container} container alignItems=\"stretch\" spacing={3}>\r\n                   {infoCards.map((infoCard)=> (\r\n                       <Grid item xs={12} sm={6} md={4} lg={3} className={classes.infoCard}>\r\n                           <div className={classes.card} style={{backgroundColor: infoCard.color}}>\r\n                                <Typography variant=\"h5\">{infoCard.title}</Typography>\r\n                                {\r\n                                infoCard.info ? \r\n                                (<Typography variant=\"h6\">\r\n                                    <strong>\r\n                                        {infoCard.title.split(' ')[2]}:\r\n                                    </strong>\r\n                                        <br/>\r\n                                        {infoCard.info}\r\n                                </Typography> ) : null}\r\n                                <Typography variant=\"h6\">Try saying: <br/><i>{infoCard.text}</i></Typography>\r\n\r\n                           </div>\r\n\r\n                        </Grid>\r\n\r\n                   ))}\r\n\r\n                </Grid>\r\n            </Grow>\r\n        );\r\n    }\r\n    return(\r\n        <Grow in>\r\n            <Grid className={classes.container} container alignItems=\"stretch\" spacing={3}>\r\n            {articles.map((article, i)=>(\r\n                <Grid item xs={12} sm={6} md={4} lg={3} style={{display: 'flex'}}>\r\n                    <NewsCard article={article} i={i} />\r\n                </Grid>\r\n            ))}\r\n            </Grid>\r\n        </Grow>\r\n        \r\n        \r\n    );\r\n}\r\n\r\nexport default NewsCards;"]},"metadata":{},"sourceType":"module"}